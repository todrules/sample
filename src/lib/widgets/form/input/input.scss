@import "../../../styles/imports";

input {
	width: 100%;
}

input {
	box-sizing: border-box;
	padding: 0.5vh 0.5vw;
	margin: 0.5vh 0.5vw;
	border-radius: 4px;
	border: 1px solid color-shade($light, -0.1);
	width: 100%;
	min-width: 200px;
	position: relative;
	left: 0;
	outline: none;
	line-height: calc(var(--line-height) * 2);
	

	
	//	animation: placeholder-in 300ms ease-in;
}


input:focus {
	//	animation: placeholder-out 300ms ease-in;
	border: 1px solid $primary;
	filter: drop-shadow(1px 1px 2px rgba($primary, 0.3)) drop-shadow(-1px -1px 2px rgba($primary, 0.3));
	outline: none !important;
}

label {
	font-size: $font-size-base;
	font-weight: $font-weight;
	margin-left: 1.5em;
	margin-bottom: 0;
	margin-top: 0.5em;
}

label input::placeholder {
	opacity: 1;
}

label input:focus::placeholder {
	opacity: 0;
}

input.ng-touched.ng-invalid {
	
	box-sizing: border-box;
//	border: 1px solid rgba($danger, 0.3);
	border-right: 4px solid $danger;
	border-left: 4px solid $danger;
//	box-shadow: 2px 2px 2px 0 rgba(color-shade($danger, 0.1), 0.3), -2px -2px 2px 0 rgba(color-shade($danger, 0.1), 0.3);
}

input.ng-touched.isvalid {
	
	box-sizing: border-box;
	//	border: 1px solid rgba($danger, 0.3);
	border-right: 4px solid $success;
	border-left: 4px solid $success;
	//	box-shadow: 2px 2px 2px 0 rgba(color-shade($danger, 0.1), 0.3), -2px -2px 2px 0 rgba(color-shade($danger, 0.1), 0.3);
}

@each $key, $value in $colors {
	form-input[color='#{$key}'] div input:focus {
		//	animation: placeholder-out 300ms ease-in;
		border: 1px solid $value;
		filter: drop-shadow(1px 1px 2px rgba($value, 0.3)) drop-shadow(-1px -1px 2px rgba($value, 0.3));
		outline: none !important;
	}
	
	form-input[color='#{$key}'] div label, form-input[color='#{$key}'] div label span {
		//	animation: placeholder-out 300ms ease-in;
		color: color-shade($value, -0.2);
	}
}
