@import "../../styles/imports";

$circle-width: 0.16em;
$circle-width-hover: 0.12em;

@mixin rotate($deg) {
	
	transform: rotate($deg);
}

.rect-auto{
	clip: rect(auto, auto, auto, auto);
}

.gauge-circle {
	position: absolute;
	border: $circle-width solid $dark;
	width: 1 - (2 * $circle-width);
	height: 1 - (2 * $circle-width);
	clip: rect(0em, 0.5em, 1em, 0em);
	border-radius: 50%;
	
	@include rotate(0deg);
}

.gauge-circle-fill {
	@include rotate(180deg);
	
}

.gauge {
	
	*, *:before, *:after {
		box-sizing: content-box;
	}
	
	position: relative;
	font-size: 120px;
	width: 1em;
	height: 1em;
	border-radius: 50%;
	float: left;
	margin: 0;
	background-color: color-shade($light, -0.2);
	filter: opacity(0.7);
	&.center{
		float: none;
		margin: 0 auto;
	}

	&.big{
		font-size: 120px;
	}

	&.small{
		font-size: 80px;
	}

	> span {
		position: absolute;
		width: 100%;
		z-index: 1;
		left: 0;
		top: 0;
		width: 5em;
		line-height: 5em;
		font-size: 0.2em;
		color: $secondary;
		display: block;
		text-align: center;
		white-space: nowrap;
		transition-property: all;
		transition-duration: 0.2s;
		transition-timing-function: ease-out;
		
	}

	&:after{
		position: absolute;
		top: $circle-width;
		left: $circle-width;
		display: block;
		content: " ";
		border-radius: 50%;
		background-color: $bg-color;
		width: 1 - (2 * $circle-width);
		height: 1 - (2 * $circle-width);
		transition-property: all;
		transition-duration: 0.2s;
		transition-timing-function: ease-in;
		
	}

	.slice {
		position: absolute;
		width: 1em;
		height: 1em;
		clip: rect(0em, 1em, 1em, 0.5em);
	}

	.bar {
		@extend .gauge-circle;
	}

	@for $j from 51 through 100 {
		
		&.p#{$j} .slice {
			@extend .rect-auto;
		}
		
		&.p#{$j} .bar:after{
			@extend .gauge-circle-fill;
		}
		
		&.p#{$j} .fill{
			@extend .gauge-circle;
			@extend .gauge-circle-fill;
		}
		
	}

	@for $j from 1 through 100 {
		&.p#{$j} .bar {
			@include rotate((360/100*$j) + deg);
		}
	}

	&:hover{
		
		cursor: default;
		
		> span {
			width: 3.33em;
			line-height: 3.33em;
			font-size: 0.3em;
			color: $primary;
		}
		
		&:after{
			top: $circle-width-hover;
			left: $circle-width-hover;
			width: 1 - (2 * $circle-width-hover);
			height: 1 - (2 * $circle-width-hover);
		}
		
	}
	
	
	// green skin
	&.success{
		
		.bar, .fill { border-color: $success !important;}
		
		&:hover{
			> span { color: $success;}
		}
		
	}
	
	// orange skin
	&.warn{
		
		.bar, .fill { border-color: $warn !important;}
		
		&:hover{
			> span { color: $warn;}
		}
		
	}

	
}